// Auto-generated. Do not edit!

// (in-package robotino_local_move.msg)


"use strict";

let _serializer = require('../base_serialize.js');
let _deserializer = require('../base_deserialize.js');
let _finder = require('../find.js');

//-----------------------------------------------------------

class LocalMoveFeedback {
  constructor() {
    this.forward_dist_x = 0.0;
    this.forward_dist_y = 0.0;
    this.rotation_dist = 0.0;
  }

  static serialize(obj, bufferInfo) {
    // Serializes a message object of type LocalMoveFeedback
    // Serialize message field [forward_dist_x]
    bufferInfo = _serializer.float32(obj.forward_dist_x, bufferInfo);
    // Serialize message field [forward_dist_y]
    bufferInfo = _serializer.float32(obj.forward_dist_y, bufferInfo);
    // Serialize message field [rotation_dist]
    bufferInfo = _serializer.float32(obj.rotation_dist, bufferInfo);
    return bufferInfo;
  }

  static deserialize(buffer) {
    //deserializes a message object of type LocalMoveFeedback
    let tmp;
    let len;
    let data = new LocalMoveFeedback();
    // Deserialize message field [forward_dist_x]
    tmp = _deserializer.float32(buffer);
    data.forward_dist_x = tmp.data;
    buffer = tmp.buffer;
    // Deserialize message field [forward_dist_y]
    tmp = _deserializer.float32(buffer);
    data.forward_dist_y = tmp.data;
    buffer = tmp.buffer;
    // Deserialize message field [rotation_dist]
    tmp = _deserializer.float32(buffer);
    data.rotation_dist = tmp.data;
    buffer = tmp.buffer;
    return {
      data: data,
      buffer: buffer
    }
  }

  static datatype() {
    // Returns string type for a message object
    return 'robotino_local_move/LocalMoveFeedback';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return 'fcda879d7916aea8cf95cd23201a7d19';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    #feedback
    float32 forward_dist_x	# forward distance to goal in x
    float32 forward_dist_y	# forward distance to goal in y
    float32 rotation_dist	# rotationaldistance to goal
    
    `;
  }

};

module.exports = LocalMoveFeedback;
