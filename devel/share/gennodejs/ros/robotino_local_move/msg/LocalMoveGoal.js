// Auto-generated. Do not edit!

// (in-package robotino_local_move.msg)


"use strict";

let _serializer = require('../base_serialize.js');
let _deserializer = require('../base_deserialize.js');
let _finder = require('../find.js');

//-----------------------------------------------------------

class LocalMoveGoal {
  constructor() {
    this.move_x = 0.0;
    this.move_y = 0.0;
    this.rotation = 0.0;
    this.ignore_rotation = false;
  }

  static serialize(obj, bufferInfo) {
    // Serializes a message object of type LocalMoveGoal
    // Serialize message field [move_x]
    bufferInfo = _serializer.float32(obj.move_x, bufferInfo);
    // Serialize message field [move_y]
    bufferInfo = _serializer.float32(obj.move_y, bufferInfo);
    // Serialize message field [rotation]
    bufferInfo = _serializer.float32(obj.rotation, bufferInfo);
    // Serialize message field [ignore_rotation]
    bufferInfo = _serializer.bool(obj.ignore_rotation, bufferInfo);
    return bufferInfo;
  }

  static deserialize(buffer) {
    //deserializes a message object of type LocalMoveGoal
    let tmp;
    let len;
    let data = new LocalMoveGoal();
    // Deserialize message field [move_x]
    tmp = _deserializer.float32(buffer);
    data.move_x = tmp.data;
    buffer = tmp.buffer;
    // Deserialize message field [move_y]
    tmp = _deserializer.float32(buffer);
    data.move_y = tmp.data;
    buffer = tmp.buffer;
    // Deserialize message field [rotation]
    tmp = _deserializer.float32(buffer);
    data.rotation = tmp.data;
    buffer = tmp.buffer;
    // Deserialize message field [ignore_rotation]
    tmp = _deserializer.bool(buffer);
    data.ignore_rotation = tmp.data;
    buffer = tmp.buffer;
    return {
      data: data,
      buffer: buffer
    }
  }

  static datatype() {
    // Returns string type for a message object
    return 'robotino_local_move/LocalMoveGoal';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return '366637325822a34a6134906628e5673b';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    #goal definition
    float32 move_x		# in meters
    float32 move_y		# in meters
    float32 rotation	# in rad
    bool ignore_rotation #if true robot is not rotated after moving. if false robot is rotated "rotation" relative to the starting orientation
    
    `;
  }

};

module.exports = LocalMoveGoal;
